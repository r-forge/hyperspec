% -*- mode: noweb; noweb-default-code-mode: R-mode; -*- 
\documentclass[english, a4paper, 10pt, headings=small, DIV11]{scrartcl}
\SweaveInput{vignettes.defs}

\usepackage{longtable}
\usepackage{array}

\hypersetup{pdftitle={hyperSpec plotting functions},
 pdfauthor={C. Beleites},
 pdfsubject={Introduction on the hyperSpec plotting functions},
 pdfkeywords={hyperSpec}}

% \VignetteIndexEntry{hyperSpec plotting functions}
% \VignetteKeywords{hyperspec}
% \VignettePackage{hyperSpec}
   \renewenvironment{Schunk}{\begin{small}}{\end{small}}
\begin{document}
\title{\Rpackage{hyperSpec} Plotting functions }
\maketitle
\warnbox{Reproducing the Examples in this Vignette}{
All spectra used in this manual are installed automatically with \phy. 

Note that some definitions are executed in \texttt{vignette.defs}.
}

\tableofcontents{}

\section{Predefined functions}
\Rpackage{hyperSpec} comes with three predefined plotting functions.

\setkeys{Gin}{width = \textwidth}

\begin{longtable}{@{}p{.45\textwidth} p{.55\textwidth}}
\textbf{plotspc} &\tabularnewline  \nopagebreak
  \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotspc}} &
   plots the spectra, \ie the intensities \Rcode{\$spc} over the wavelengths \Rcode{@wavelength}.
<<plotspc, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (paracetamol)
@ 
\\
\textbf{plotmap}  &\tabularnewline \nopagebreak
  \raisebox{-4cm}{\includegraphics[width = .45\textwidth]{fig/fig-plotmapcho}} &
  plots a false colour map: a single value (e.\,g. average intensity or cluster membership) over two data columns (default \Rcode{\$x} and \Rcode{\$y}).
<<plotmapcho, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotmap (chondro)
@
\\
\textbf{plotc} &\tabularnewline  \nopagebreak
  \raisebox{-3.7cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotflu}} &
    plots a time series or calibration plot: e.\,g. an intensity over a single other data column (like concentration, depth, or time).
<<plotflu, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotc (flu)
@
\end{longtable}



% \begin{description}
% %\setlength{\labelwidth}{2.5cm}
% %\setlength{\itemindent}{1.7cm}

% \item [{\Rcode{plotmap}}] plots a false colour map: a single value (e.\,g. average intensity or 
%    cluster membership) over two data columns (default \Rcode{\$x} and \Rcode{\$y}).
% \item [{\Rcode{plotc}}] plots a time series or calibration plot: e.\,g. an intensity over a single % other data column (like concentration, depth, or time).
% \end{description}

\section{Arguments for \Rmethod{plot} }
\label{sec:argum-rmeth}



All three plus some more handy abbreviations are also accessible via \Rmethod{plot}: \mFun{\Rfunction{plot}}

\Rfunction{plot} uses its second argument to determine which of the
three specialized plot functions to call. All further arguments are
handed over to this function.


%\begin{tabular}{@{}p{.45\textwidth} p{.55\textwidth}}
\begin{longtable}{@{}p{.45\textwidth} p{.55\textwidth}}
\textbf{plot (x, \textquotedbl{}spc\textquotedbl{})} \vspace*{2ex} &\tabularnewline  \nopagebreak
\raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotspcflu}} &
is equivalent to \Rcode{plotspc (flu)}
<<plotspcflu, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (flu, "spc")
@ 
\\ \vspace*{2ex}
 \textbf{plot (x, \textquotedbl{}spcmeansd\textquotedbl{})} &\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotchomean}} &
plots mean spectrum $\pm$ 1 standard deviation
<<plotchomean, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (chondro, "spcmeansd")
@
\\ \vspace*{2ex}
\textbf{plot (x, \textquotedbl{}spcprctile\textquotedbl{})}&\tabularnewline  \nopagebreak
\raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotchoprctl}} &
plots median, 16$^{\text{th}}$ and 84$^{\text{th}}$ percentile. This is similar to \Rcode{\textquotedbl{}spcmeansd\textquotedbl{}}. Spectroscopic data frequently are not Gaussian distributed. The percentiles give a better idea of the true distribution. They are also less sensitive to outliers.
<<plotchoprctl, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (chondro, "spcprctile")
@
\\ \vspace*{2ex}
\textbf{plot (x, \textquotedbl{}spcprctl5\textquotedbl{})}&\tabularnewline  \nopagebreak
\raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotchoprctl5}} &
like \Rcode{\textquotedbl{}spcprctl\textquotedbl{}} plus 5$^{\text{th}}$ and 95$^{\text{th}}$percentile.
<<plotchoprctl5, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (chondro, "spcprctl5")
@
\\ \vspace*{2ex}
\textbf{plot (x, \textquotedbl{}map\textquotedbl{})}&\tabularnewline \nopagebreak
\raisebox{-4.0cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotmapcho2}} &
is equivalent to \Rcode{plotmap (chondro)}
<<plotmapcho2, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (chondro, "map")
@
\\
\textbf{plot (x, \textquotedbl{}c\textquotedbl{})}&\tabularnewline  \nopagebreak
\raisebox{-3.7cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotflu2}} &
is equivalent to \Rcode{plotc (flu)}
<<plotflu2, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (flu, "c")
@
\\
\textbf{plot (x, \textquotedbl{}ts\textquotedbl{})}&\tabularnewline  \nopagebreak
\raisebox{-3.7cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotts}} &
plots a time series plot, equivalent to \Rcode{plotc (laser, spc \textasciitilde ~t)}
<<plotts, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (laser, "ts")
@
\\
\textbf{plot (x, \textquotedbl{}depth\textquotedbl{})}&\tabularnewline \nopagebreak
  \raisebox{-3.7cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotdepth}} &
plots a depth profile plot, equivalent to \Rcode{plotc (laser, spc \textasciitilde ~z)}
<<>>=
depth.profile <- new ("hyperSpec",
    spc = as.matrix (rnorm (20) + 1:20),
    data = data.frame (z = 1 : 20),
    label = list (spc = "I / a.u.", 
       z = expression (`/` (z, mu*m)),
       .wavelength = expression (lambda)))
@
<<plotdepth, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (depth.profile, "depth")
@

\end{longtable}



\section{Spectra}\mFun{\Rfunction{plotspc}}

\Rfunction{plotspc} offers a variety of parameters for customized
plots. To plot ... 
\begin{longtable}{@{}p{.45\textwidth} p{.55\textwidth}}
  \textbf{with reversed abscissa}&\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-abscissa}} &
use \Rcode{wl.reverse = TRUE}
<<abscissa, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (paracetamol, wl.reverse = TRUE )
@
\\
\textbf{in different colours}&\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-colours}} &
use \Rcode{col = vector.of.colours}
<<colours, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (flu, col = matlab.dark.palette(6) )
@
\\
\textbf{dots instead of lines }&\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-dots}} &
use \Rcode{lines.args = list (pch = 20, type = \textquotedbl{}p\textquotedbl{})}
<<dots, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (paracetamol, 
         lines.args = list (pch = 20, type = "p"))
@
\\
\textbf{mass spectra }&\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-mass}} &
use \Rcode{lines.args = list (type = \textquotedbl{}h\textquotedbl{})}
<<mass, fig = TRUE, width = 4, height = 3,include = FALSE >>=
fake.mass.spec <- new ("hyperSpec", 
                       spc = matrix (100 * runif (25), 
                         nrow = 1),
                       wavelength = 1 : 25 + 28,
                       label = list (
                         spc = expression (e^"-" / s), 
                         .wavelength = expression (m / z)))
plot (fake.mass.spec, lines.args = list (type = "h"))
@
\\
\textbf{particular wavelength ranges }&\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-wavelength}} &
use \Rcode{wl.range = list (600 \textasciitilde{} 1800, 2800 \textasciitilde{}
3100)}.
If \Rcode{wl.range} already contains indices: use \Rcode{wl.index = TRUE}.
Cut the wavelength axis appropriately with \Rcode{xoffset = 800}
<<wavelength, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (paracetamol, 
         wl.range = c (300 ~ 1800, 2800 ~ max), 
         xoffset = 850)
@
\\
\textbf{stacked spectra}&\tabularnewline \nopagebreak
 \raisebox{-4.5cm}{\includegraphics[width = .40\textwidth]{fig/fig-stacked}} &
use \Rfunarg{stacked = TRUE}
<<stacked, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (chondro[1:3,,], stacked = TRUE)
@
\\
\raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-stacked2}} &
oder \Rfunarg{yoffset = }
<<stacked2, fig = TRUE, width = 4, height = 3,include = FALSE >>=
cluster.means <- aggregate (chondro, 
                            chondro$clusters, 
                            mean_pm_sd)
plotspc (cluster.means, 
         yoffset = rep (c (0,1500,3000), each = 3), 
         col = rep (matlab.dark.palette (3), each = 3))
@

\\
\textbf{more spectra into an exsisting plot}&\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-add}} &
use \Rfunarg{add = TRUE}
<<add, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (chondro[30,,])
plotspc (chondro[300,,], add = TRUE, col = "blue")
@
\\
\textbf{with different line at $I =0$}&\tabularnewline \nopagebreak
 \raisebox{-4cm}{\includegraphics[width = .40\textwidth]{fig/fig-diffline}} &
use \Rcode{zeroline = \emph{list.of.arguments.to.abline}}.
\Rcode{NULL} suppresses the line.
<<diffline, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plotspc (paracetamol, 
         zeroline = list (h=4500, col = "red"))
@
\end{longtable}

\section{Spectra Matrix}
\label{sec:plotmat}
It is often useful to plot the spectra against an additional coordinate, \eg the time for time series, the depth for depth profiles, etc. 

This is done by  \Rfunction{levelplot}, or by using \Rcode{plot (object, "mat", model = spc ~ .wavelength * other.data.column)}. The actual plotting is done by \Rfunction{levelplot}, so the plots can be grouped or conditioned.

\begin{longtable}{@{}p{.45\textwidth} p{.55\textwidth}}
\textbf{plotmat: different palette}&\tabularnewline \nopagebreak
 \raisebox{-4.25cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotmat1}} &
 
<<plotmat1, fig = TRUE, width = 4, height = 3,include = FALSE >>=
levelplot (spc ~ .wavelength * t, 
           laser,
           col.regions = matlab.palette (20))
@
\\
\textbf{plotmat: contour}&\tabularnewline \nopagebreak
 \raisebox{-4.25cm}{\includegraphics[width = .40\textwidth]{fig/fig-plotmat2}} &
 
<<plotmat2, fig = TRUE, width = 4, height = 3,include = FALSE >>=
plot (flu, 
      "mat", 
      model = spc ~ .wavelength * c, 
      contour = TRUE, 
      labels = TRUE, 
      col = "#00000080",
      at = seq (0, 700, by = 50))
@
\end{longtable}

\section{Calibration Plots, (Depth) Profiles, and Time Series Plots}\mFun{\Rfunction{plotc}}

\Rfunction{plotc} plots an intensity over one of the extra data columns.
The abscissa uses column \Rcode{\$c} by default, another column can
be specified using \Rfunarg{use.c}\Rcode{ = name}. The ordinate can
be calculated as a sum characteristic (with parameter \Rfunarg{func}\Rcode{= function},
defaulting to \Rmethod{sum}). If parameter \Rfunarg{z} is given,
these values are used instead. \Rfunarg{z} may be the name of an extra
data column, or a \Rclass{numeric} that should be used directly.

To customize the plot, give any arguments that you would usually supply
to \Rmethod{plot} as a list using argument \Rfunarg{plot.args}.


\section{False-Colour Maps}\mFun{\Rfunction{plotmap}}

\Rcode{plotmap} uses \Rcode{levelplot}, a \Rpackage{lattice} function.
Therefore, in loops, functions, Sweave chunks, etc. the lattice object
needs to be printed explicitly by \Rcode{print (plotmap (object))}
(\href{http://cran.r-project.org/doc/FAQ/R-FAQ.html#Why-do-lattice_002ftrellis-graphics-not-work_003f}{R FAQ: Why do lattice/trellis graphics not work?}).

\Rfunction{plotmap} produces a 3d plot, with the $z$ axis colour-coded.
\Rfunction{plotmap}'s arguments \Rfunarg{x} and \Rfunarg{y} take
the name of extra data columns.


\paragraph{The colour-coded axis. }

Also \Rfunarg{z} can be used to select one column of the extra data
by name. Alternatively, it may be a numeric or factor directly giving
the values to be used. Each level of a factor will have one colour.
It is also possible to plot a sum characteristic of the spectra: supply
the function in argument \Rfunarg{func}. The default setting is to
plot the average intensity (no \Rfunarg{z} and \Rfunarg{func}\Rcode{= mean}).

To plot with a different palette, use \Rfunarg{trellis.args}\Rcode{= list (col.regions = palette)}.


\paragraph{Conditioning.}
Lattice graphics have a concept of conditioning a plot. Instead of
plotting all data in one diagram, a diagram is produced for each of
the groups specified by the condition. \Rfunction{plotmap}'s argument
\Rfunarg{cond} takes he name of the extra data column used for conditioning.
This could e.\,g. be a column containing the sample number of a \Rclass{hyperSpec}
object that contains several samples.



Beispiele:
voronoi

\section{3 D}
\label{sec:3-d}























% Figure~\ref{fig:example-plots} shows some example plots.


% %
% \begin{figure}
% \hspace*{-0.5cm}
% \setkeys{Gin}{width = .245\textwidth}
% \subfloat[\label{fig-plot-spc}]{

% <<plotspcflu, fig = TRUE, width = 4, height = 3, echo = FALSE>>=
% plotspc (flu)
% @
% }
% \subfloat[\label{fig-plot-spcmeansd}]{
% <<plotspcmeansd, fig = TRUE, width = 4, height = 3, echo = FALSE>>=
% plot (chondro, "spcmeansd")
% @
% }
% \subfloat[\label{fig-plot-c}]{
% <<plotc, fig = TRUE, width = 4, height = 3, echo = FALSE>>=
% plotc (flu)
% @
% }
% \subfloat[\label{fig-plot-map}]{
% <<plotmap, fig = TRUE, width = 4, height = 3, echo = FALSE>>=
% YG <- colorRampPalette (c ("white", "gold", "dark green"), space = "Lab")
% plotmap (chondro, col.regions = YG (20))
% @
% }

% \caption{\label{fig:example-plots}Some example plots. \subref{fig-plot-spc}\Rcode{plotspc (flu)},
% \subref{fig-plot-spcmeansd}\Rcode{plot (chondro, \textquotedbl{}spcmeansd\textquotedbl{})},
% \subref{fig-plot-c}\Rcode{plotc (flu)}, and \subref{fig-plot-map}\Rcode{plotmap (chondro, 
%    col.regions % = YG (20))} (using a yellow-green palette).}

% % \end{figure}



% \subsection{Plotting Spectra}\mFun{\Rfunction{plotspc}}

% \Rfunction{plotspc} offers a variety of parameters for customized
% plots. To plot ...
% \begin{description}
% \setlength{\labelwidth}{2.5cm}
% \setlength{\itemindent}{1.7cm}
% \item [with reversed abscissa] use \Rcode{wl.reverse = TRUE}
% \item [in different colours] colours use \Rcode{col = vector.of.colours}
% \item [dots instead of lines] use \Rcode{lines.args = list (pch = 20, type = % \textquotedbl{}p\textquotedbl{})}
% \item [mass spectra] use \Rcode{lines.args = list (type = \textquotedbl{}h\textquotedbl{})}
% \item [particular wavelength ranges] use \Rcode{wl.range = list (600 \textasciitilde{} 1800, 2800 % \textasciitilde{}
% 3100)}\\
% If \Rcode{wl.range} already contains indices: use \Rcode{wl.index = TRUE}\\
% Cut the wavelength axis appropriately with \Rcode{xoffset = 800}
% \item [stacked spectra] use \Rfunarg{stacked}
% \item [more spectra into an existing plot] use \Rcode{add = TRUE}
% \item [with different line at $I =0$] use \Rcode{zeroline = \emph{list.of.arguments.to.abline}}.
% \Rcode{NULL} suppresses the line.
% \end{description}
% <<ms, fig = TRUE, width = 8, height = 5, echo = FALSE, include = FALSE>>=
% fake.mass.spec <- new ("hyperSpec", spc = matrix (100*runif (25), nrow = 1),
%    wavelength = 1 : 25 + 28,
%    label = list (spc = expression (e^"-" / s), .wavelength = expression (m / z)))
% plot (fake.mass.spec, lines.args = list (type = "h"))
% @
% <<plotspcadd, fig = TRUE, width = 8, height = 5, echo = FALSE, include = FALSE>>=
% plot (paracetamol, wl.range = c (300 ~ 1800, 2800 ~ max), xoffset = 850, wl.reverse = TRUE, col = 
%  "blue")
% @

% %
% \begin{figure}
% \subfloat[\label{fig-plotspc-ms}]{\includegraphics[width=0.33\textwidth]{fig/fig-ms}}
% 
% \subfloat[\label{fig-plotspc-paracetamol}]{\includegraphics[width=0.33\textwidth]{fig/fig-plotspcadd}}
% 
% \subfloat[\label{fig-plotmap-factor}]{\includegraphics[width=0.33\textwidth]{fig/fig-clustmap}}
% \caption{Arguments to \Rfunction{plotspc}. \subref{fig-plotspc-ms}
% \Rcode{plot (fake.mass.spec, lines.args = list (type = \textquotedbl{}h\textquotedbl{}))}
% \subref{fig-plotspc-paracetamol} \Rcode{plotspc (paracetamol, wl.range = c (300 \textasciitilde{} 
%    1800, 2800
% \textasciitilde{} max), xoffset = 850, wl.reverse = TRUE)} \subref{fig-plotmap-factor} % \Rcode{plotmap} with a factor,
% see section \ref{HCA}.}
% \end{figure}

% \subsection{Plotting the Spectra Matrix}
% \label{sec:plotmat}
% It is often useful to plot the spectra against an additional coordinate, \eg the time for time % series, the depth for depth profiles, etc. 

% This is done by  \Rfunction{levelplot}, or by using \Rcode{plot (object, "mat", model = spc ~ % .wavelength * other.data.column)}. The actual plotting is done by \Rfunction{levelplot}, so the plots % can be grouped or conditioned.
% See figure~\ref{fig:plotmat}
% <<plotmat1, fig = TRUE, include = FALSE>>=
% levelplot (spc ~ .wavelength * t, laser, col.regions = YG (20))
% @
% <<plotmat2, fig = TRUE, include = FALSE>>=
% print (plot (flu, "mat", contour = TRUE, labels = TRUE, col = "#00000080"))
% @
% \begin{figure}
% \subfloat[\label{fig-plotmat-a}\Rcode{levelplot (spc ~ .wavelength * t, laser, col.regions = YG % (20))}]{\includegraphics[width=0.495\textwidth]{fig/fig-plotmat1}}%
% \subfloat[\label{fig-plotmat-b}\Rcode{plot (flu, "mat", contour = TRUE, labels = TRUE, col = % "\#00000080")}]{\includegraphics[width=0.495\textwidth]{fig/fig-plotmat2}}%
% \caption{\label{fig:plotmat}plotting the spectra matrix. 
% }
% \end{figure}

% <<plotdef>>=
% showMethods ("plot", classes = "hyperSpec", includeDefs = TRUE)
% @
% The actual dispatching of the plots according to the second (character) argument is done by  %\Rfunction{.plot}. Thus, the new switchyard function can just act if \Rcode{y == \textquotedbl       % ms\textquotedbl}, and otherwise call \Rfunction{.plot}. As \Rfunction{.plot} is not exported from  % \phy's namespace, it must be called including its namespace.
% <<newplot>>=
% .my.mass.plot <- function (x, y, ...) {
%   if (y == "ms") {
%     dots <- list (object = x, ...)
%     dots <- modifyList (dots, list (lines.args = list (type = "h")))
%     do.call (plotspc, dots)
%   } else {
%     hyperSpec:::.plot (x, y, ...)
%   }
% }
% @ 
% Finally, \R needs to know that the new switchyard function should be used for plotting of \chy 
%  objects:
% <<setmethod>>=
% setMethod ("plot", signature (x = "hyperSpec", y = "character"), .my.mass.plot)
% @

% From now on, \Rcode{plot (x, \textquotedbl ms\textquotedbl)} will produce a plot with vertical %lines % as used for mass spectra. All other plot types are unaffected. 

% Patching \Rfunction{.plot} in \phy if the changes could be useful 




<<cleanup, echo = FALSE, results = hide>>=
rm (list = ls () )
@

\end{document}
